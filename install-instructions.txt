#########################
# SERVER SET UP 
#########################
# set up ec2 instance, use t2.medium
# expose port 8080, 8081, 4200, HTTP

# install jenkins
 > sudo apt-get update
 > sudo apt install default-jdk -y
 > sudo apt install maven -y
 > curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
 > echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
 > sudo apt-get update
 > sudo apt-get install jenkins -y
 
 
# install docker 
 > sudo apt-get update
 > sudo apt-get install ca-certificates curl gnupg lsb-release
 > curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 > echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 > sudo apt-get update
 > sudo apt-get install docker-ce docker-ce-cli containerd.io -y

# install docker-compose 
> sudo apt-get update
> sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
> sudo chmod +x /usr/local/bin/docker-compose
> sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# verify docker install 
 > sudo docker -v

# verify docker-compose 
> docker-compose --version

# give jenkins user permissions and restart the jenkins server. 
 > sudo usermod -a -G docker jenkins
 > sudo service jenkins restart

# verify jenkins install
 > sudo service jenkins status

#if status is active get password...
 > go to website with port : 8080 -> example: http://54.147.239.252:8080/
# get password for jenkins
 > sudo cat /var/lib/jenkins/secrets/initialAdminPassword
# set up jenkins. create pipeline and push code to jenkins
# for backend pipeline, use git repo: https://github.com/samparsons/pg6-backend.git










#########################
# FRONTEND SERVER SET UP 
#########################
# ec2 instance #2 - angular app
# set up ec2 instance, use t2.medium 
# expose port 8080, 80, HTTP

# install jenkins
 > sudo apt-get update
 > sudo apt install default-jdk -y 
 > sudo apt install maven -y
 > curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
 > echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
 > sudo apt-get update
 > sudo apt-get install jenkins -y


 
# install docker 
 > sudo apt-get update
 > sudo apt-get install ca-certificates curl gnupg lsb-release
 > curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 > echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 > sudo apt-get update
 > sudo apt-get install docker-ce docker-ce-cli containerd.io -y

# verify install
 > sudo docker -v

# give jenkins user permissions and restart the jenkins server. 
 > sudo usermod -a -G docker jenkins
 > sudo service jenkins restart

# verify jenkins 
 > sudo service jenkins status

#if status is active get password
 > sudo cat /var/lib/jenkins/secrets/initialAdminPassword
 # set up jenkins. go to website with port : 8080 -> example: http://{yourSite}:8080/

#Create apache server
 > sudo apt update
 > sudo apt install apache2 -y
 > sudo ufw allow 'Apache'

# verify apache status 
 > sudo systemctl status apache2

# give jenkins permissions to the right folders.
 > cd /var/
 > sudo chown -R jenkins:root www/


# create pipeline
 > install nodejs plugin -> follow instructions here: https://plugins.jenkins.io/nodejs/
 > go to advanced menu in plugin manager and click the 'Check now' button
 > General: check the GitHub Project box. Put url to repo.
 > Source Code Management: Choose Git radio button. Fill in. 
 > Build Environment: check Provide Node & npm bin/ folder to PATH, use defaults
 > Build: Execute shell 
 > npm install
 > npm run build --prod
 > mv dist/foodbox/* /var/www/html
 # save & run 




 NOTES:
# run the command to run ubuntu on the docker image so you can start doing commands to check and see how things are working. 
> docker run -it ubuntu bash 

#run an image name 
> docker run <image name> 



# show the ip address of the container 
> docker exec <image name> cat /etc/hosts 

